<!DOCTYPE html>
<html>

<head>
    <%- include ("../partials/header.ejs") %>

</head>

<body>

    <%- include ("../partials/body.ejs") %>


        <script src="/socket.io/socket.io.js"></script>

        <script>
            const socket = io();
            var input_point = document.getElementById('input_point');
            var input_username = document.getElementById('input_username');
            var ranking = document.getElementById('ranking');
            var members = document.getElementById('members');
            var input_admin = document.getElementById('input_admin');
            var reveal_button = document.getElementById('reveadBtn');
            var point_button = document.getElementById('pointBtn');
            var members_element = document.querySelector('#members_element');
            var ranking_template = document.querySelector('#ranking_template');
            var user_point = document.getElementById('user_point');

            var waiting_icon = "Hour-Glass-512.png";
            var submit_icon = "Submit-01-512.png";

            var page_login = document.getElementById('page_login');
            var page_estimate = document.getElementById('page_estimate');

            var login_status = false;
            var login_username;
            var last_point;

            function enterRoom() {
                login_username = input_username.value.trim();
                if (login_username && !login_status) {
                    login_status = true;
                    socket.emit('regist', login_username);
                } else {
                    input_username.value = "";
                    input_username.placeholder = "INPUT YOUR NAME PLEASE!";
                }

            }

            function submit_answer() {
                if (login_status) {
                    if (input_point.value) {
                        last_point = input_point.value;
                        socket.emit('send_answer', last_point);
                        input_point.value = '';
                    } else {
                        input_point.placeholder = "point?";
                    }
                }
            }

            function reset() {
                if (login_status) {
                    socket.emit('reset');
                    input_point.value = '';
                    user_point.innerHTML = '';
                    last_point = 0;
                }
            }

            function reveal() {
                if (login_status) {
                    if (input_admin.value) {
                        socket.emit('reveal', input_admin.value);
                        input_admin.value = '';
                    }
                }
            }

            function setBtn(status) {
                input_point.value = "";
                input_point.disabled = status;
                reveal_button.disabled = status;
                point_button.disabled = status;
            }

            function setMember(data) {
                if (login_status) {
                    members.innerHTML = "";
                    for (i in data.online) {
                        let clone = members_element.cloneNode(true);
                        clone.style.display = "block";
                        clone.id = "cloneID-" + data.online[i][0];
                        clone.childNodes[1].childNodes[3].childNodes[1].childNodes[1].innerHTML = data.online[i][0];
                        if (data.online[i][1]) {
                            clone.childNodes[1].childNodes[1].childNodes[0].src = submit_icon;
                        } else {
                            clone.childNodes[1].childNodes[1].childNodes[0].src = waiting_icon;
                        }
                        if (login_username === data.online[i][0]) {
                            clone.childNodes[1].childNodes[3].style.background = '#d5dde5';
                        }
                        members.appendChild(clone);
                    }
                }
            }

            function setRanking(data, reveal_status) {
                ranking.innerHTML = "";
                for (i in data.answers_ranking) {
                    let clone_ranking = ranking_template.cloneNode(true);
                    clone_ranking.style.display = "table-row";
                    clone_ranking.id = "cloneRank-" + data.answers_ranking[i];
                    clone_ranking.childNodes[1].innerHTML = data.answers_ranking[i];
                    if (reveal_status) {
                        clone_ranking.childNodes[3].innerHTML = data.curr_point[i];
                        if (login_username === data.answers_ranking[i]) {
                            clone_ranking.childNodes[1].classList.add('row-highlight');
                            clone_ranking.childNodes[3].classList.add('row-highlight');
                        }
                    } else {
                        if (login_username === data.answers_ranking[i]) {
                            clone_ranking.childNodes[3].innerHTML = last_point;
                            clone_ranking.childNodes[1].classList.add('row-highlight');
                            clone_ranking.childNodes[3].classList.add('row-highlight');
                        } else {
                            clone_ranking.childNodes[3].innerHTML = 'Answered';
                        }
                    }
                    ranking.appendChild(clone_ranking);
                }
            }

            socket.on('connect_room', function(data) {
                if (login_status) {
                    page_login.style.display = "none";
                    setMember(data);
                    setRanking(data, false);
                    page_estimate.style.display = "block";
                }

            });

            socket.on('send_answer', function(data) {
                if (login_status) {
                    setMember(data);
                    setRanking(data, false);
                }
            });

            socket.on('reset', function(data) {
                if (login_status) {
                    setMember(data);
                    setBtn(false);
                    ranking.innerHTML = "";
                }
            });

            socket.on('reveal_answer', function(data) {
                if (login_status) {
                    setRanking(data, data.reveal_status);
                    setBtn(data.reveal_status);
                }
            });
        </script>
</body>

</html>